{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/add-book/add-book.component.ts","./src/app/add-reader/add-reader.component.ts","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/core/badge.service.ts","./src/app/core/book-resolver.service.ts","./src/app/core/book-tracker-error-handler.service.ts","./src/app/core/data.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/data.ts","./src/app/edit-book/edit-book.component.ts","./src/app/edit-reader/edit-reader.component.ts","./src/app/models/bookTrackerError.ts","./src/environments/environment.ts","./src/main.ts","./src/app/app.component.css","./src/app/add-book/add-book.component.html","./src/app/add-reader/add-reader.component.html","./src/app/app.component.html","./src/app/dashboard/dashboard.component.html","./src/app/edit-book/edit-book.component.html","./src/app/edit-reader/edit-reader.component.html"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from 'app/core/data.service';\r\n\r\nimport { Book } from \"app/models/book\";\r\n\r\n@Component({\r\n  selector: 'app-add-book',\r\n  templateUrl: './add-book.component.html',\r\n  styles: []\r\n})\r\nexport class AddBookComponent implements OnInit {\r\n\r\n  constructor(private dataservice : DataService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveBook(formValues: any): void {\r\n    let newBook: Book = <Book>formValues;\r\n    newBook.bookID = 0;\r\n    console.log(newBook);\r\n    this.dataservice.AddBook(newBook).subscribe(\r\n      (data : Book) => console.log(data),\r\n      (err : any ) => console.log(err) \r\n    )\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\n\r\n@Component({\r\n  selector: 'app-add-reader',\r\n  templateUrl: './add-reader.component.html',\r\n  styles: []\r\n})\r\nexport class AddReaderComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  saveReader(formValues: any): void {\r\n    let newReader: Reader = <Reader>formValues;\r\n    newReader.readerID = 0;\r\n    console.log(newReader);\r\n    console.warn('Save new reader not yet implemented.');\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { AddBookComponent } from \"app/add-book/add-book.component\";\r\nimport { AddReaderComponent } from \"app/add-reader/add-reader.component\";\r\nimport { DashboardComponent } from \"app/dashboard/dashboard.component\";\r\nimport { EditBookComponent } from \"app/edit-book/edit-book.component\";\r\nimport { EditReaderComponent } from \"app/edit-reader/edit-reader.component\";\r\nimport { BookResolverService } from './core/book-resolver.service';\r\n\r\nconst routes: Routes = [\r\n  { path: 'dashboard', component: DashboardComponent , resolve : {resolvedbooks : BookResolverService} },\r\n  { path: 'addbook', component: AddBookComponent },\r\n  { path: 'addreader', component: AddReaderComponent },\r\n  { path: 'editreader/:id', component: EditReaderComponent },\r\n  { path: 'editbook/:id', component: EditBookComponent },\r\n  { path: '', redirectTo: 'dashboard', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { ErrorHandler, NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule} from '@angular/common/http' ;\r\n\r\nimport { AddBookComponent } from './add-book/add-book.component';\r\nimport { AddReaderComponent } from './add-reader/add-reader.component';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EditBookComponent } from './edit-book/edit-book.component';\r\nimport { EditReaderComponent } from './edit-reader/edit-reader.component';\r\nimport { BookTrackerErrorHandlerService } from './core/book-tracker-error-handler.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DashboardComponent,\r\n    AddBookComponent,\r\n    EditReaderComponent,\r\n    EditBookComponent,\r\n    AddReaderComponent\r\n  ],\r\n  providers: [\r\n    { provide: ErrorHandler, useClass: BookTrackerErrorHandlerService }\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BadgeService {\r\n\r\n  constructor() { }\r\n\r\n  getReaderBadge(minutesRead: number): string {\r\n\r\n    if (minutesRead > 5000) {\r\n      return 'Book Worm';\r\n    }\r\n    else if (minutesRead > 2500) {\r\n      return 'Page Turner';\r\n    }\r\n    else {\r\n      return 'Getting Started';\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { Resolve , ActivatedRouteSnapshot , RouterStateSnapshot } from \"@angular/router\";\r\nimport { Observable, of } from \"rxjs\";\r\nimport { Book } from \"app/models/book\";\r\nimport { DataService } from \"./data.service\";\r\nimport { BookTrackerError } from \"app/models/bookTrackerError\";\r\nimport { catchError } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n providedIn: 'root'\r\n})\r\n\r\nexport class BookResolverService implements Resolve<Book[] | BookTrackerError>\r\n{\r\n    constructor(private dataservice : DataService) {}\r\n\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot):  Observable<Book[] | BookTrackerError>  {\r\n        return this.dataservice.getAllBooks() \r\n        .pipe(\r\n            catchError(error => of(error))\r\n        )\r\n    }\r\n}","import { Injectable, ErrorHandler } from '@angular/core';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Injectable()\r\nexport class BookTrackerErrorHandlerService implements ErrorHandler {\r\n\r\n  handleError(error: any): void {\r\n    let customError: BookTrackerError = new BookTrackerError();\r\n    customError.errorNumber = 200;\r\n    customError.message = (<Error>error).message;\r\n    customError.friendlyMessage = 'An error occurred. Please try again.';\r\n\r\n    console.log(customError);\r\n  }\r\n\r\n  constructor() { }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\r\nimport { from, Observable , throwError } from 'rxjs';\r\nimport { map , tap , catchError } from 'rxjs/operators'\r\n\r\nimport { allBooks, allReaders } from 'app/data';\r\nimport { Reader } from \"app/models/reader\";\r\nimport { Book } from \"app/models/book\";\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\nimport { Oldbook } from 'app/models/Oldbook';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n  // we are injecting the httpclient into our service constructor ! \r\n  // the way of anguar to inject dependancy is a little bit easier and different than .NET ! \r\n\r\n  constructor(private http : HttpClient) { }\r\n\r\n  mostPopularBook: Book = allBooks[0];\r\n\r\n  setMostPopularBook(popularBook: Book): void {\r\n    this.mostPopularBook = popularBook;\r\n  }\r\n\r\n  getAllReaders(): Reader[] {\r\n  \r\n    \r\n    return allReaders;\r\n  }\r\n\r\n  getReaderById(id: number): Reader {\r\n    return allReaders.find(reader => reader.readerID === id);\r\n  }\r\n\r\n  getAllBooks(): Observable<Book[] | BookTrackerError> {\r\n    console.log(\"getting all the books from the server \") ;\r\n    return this.http.get<Book[]>('/api/books')\r\n    .pipe(\r\n      catchError(error => this.handlehttpError(error))\r\n    )\r\n  }\r\n  private handlehttpError(error : HttpErrorResponse ) : Observable<BookTrackerError>\r\n  {\r\n    let dataError = new BookTrackerError() ; \r\n    dataError.errorNumber = 100 ; \r\n    dataError.message= error.statusText ;\r\n    dataError.friendlyMessage = \"an Error had occured when retrieving data\"  ;\r\n    return (throwError(dataError))\r\n\r\n  }\r\n\r\n  getBookById(id: number): Observable<Book> {\r\n    //configure the HttpHeader ! \r\n    // we could in place of addding a variable , just instanciate the class directly in the headers tag !! \r\n    let getHeader : HttpHeaders =  new HttpHeaders({\r\n      'Accept' : 'application/json' , \r\n      'Authorization' : 'my-token'\r\n    }) ;\r\n    return this.http.get<Book>(`/api/books/${id}`, {headers : getHeader})  }  \r\n\r\n    GetOldBookById(id : number) : Observable<Oldbook> {\r\n      return this.http.get<Book>(`/api/books/${id}`)\r\n      .pipe(\r\n        map(b => <Oldbook> {\r\n          bookTitle : b.title,\r\n          year :  b.publicationYear\r\n        }),\r\n        tap(classicbook => console.log(classicbook))\r\n      )\r\n    }\r\n    //keep an eye on the exact writing , Headers is not headers !\r\n\r\n    AddBook(newbook : Book) : Observable<Book>\r\n    {\r\n      return this.http.post<Book>('/api/books', newbook , \r\n      { headers : new HttpHeaders\r\n        ({\r\n        'content-Type' : 'application/json' \r\n      })\r\n      } )\r\n    }\r\n\r\n    UpdateBook(updatebook : Book) : Observable<void>\r\n    {\r\n      return this.http.put<void>(`/api/books/${updatebook.bookID}`, updatebook , \r\n      { headers : new HttpHeaders\r\n        ({\r\n        'content-Type' : 'application/json' \r\n      })\r\n      } )\r\n    }\r\n\r\n    DeleteBook(bookID : number) : Observable<void>\r\n    {\r\n      return this.http.delete<void>(`/api/books/${bookID}`) \r\n    } \r\n    \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BookTrackerError } from 'app/models/bookTrackerError';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styles: []\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  allBooks: Book[];\r\n  allReaders: Reader[];\r\n  mostPopularBook: Book;\r\n\r\n  constructor(private dataService: DataService,\r\n              private title: Title,\r\n              private router : ActivatedRoute) { }\r\n  \r\n  ngOnInit() {\r\n    //it is a resolver , angular will take care of subscribing to the observable and delivering the data via the router \r\n    /*this.dataService.getAllBooks() \r\n    .subscribe\r\n    (\r\n      // we have casted the data as the book type ! \r\n      (data : Book[] | BookTrackerError) => this.allBooks = <Book[]> data , \r\n      (err : BookTrackerError) => console.log(err.friendlyMessage) ,\r\n      //the arrow function body ! \r\n      () => console.log(\"all done getting books\")\r\n\r\n    )*/\r\n    let resolveddata : Book[] | BookTrackerError = this.router.snapshot.data['resolvedbooks']\r\n    if (resolveddata instanceof (BookTrackerError)) \r\n    {\r\n      console.log(`Dashboard component error : ${resolveddata.friendlyMessage}`)\r\n    }\r\n    else \r\n    { this.allBooks = resolveddata}\r\n    this.allReaders = this.dataService.getAllReaders();\r\n    this.mostPopularBook = this.dataService.mostPopularBook;\r\n\r\n    this.title.setTitle(`Book Tracker`);\r\n  }\r\n  \r\n\r\n  deleteBook(bookID: number): void {\r\n    this.dataService.DeleteBook(bookID).subscribe(\r\n      (data : void) => { let index : number = this.allBooks.findIndex(book => bookID===book.bookID) ; \r\n      this.allBooks.splice(index,1)} ,\r\n      (err : any ) => console.log(err) \r\n    )\r\n  }\r\n\r\n  deleteReader(readerID: number): void {\r\n    console.warn(`Delete reader not yet implemented (readerID: ${readerID}).`);\r\n  }\r\n\r\n}\r\n","import { Book } from \"app/models/book\";\r\nimport { Reader } from \"app/models/reader\";\r\n\r\nexport const allReaders: Reader[] = [\r\n    { readerID: 1, name: 'Marie', weeklyReadingGoal: 400, totalMinutesRead: 5600 },\r\n    { readerID: 2, name: 'Daniel', weeklyReadingGoal: 210, totalMinutesRead: 3000 },\r\n    { readerID: 3, name: 'Lanier', weeklyReadingGoal: 140, totalMinutesRead: 600 }\r\n  ];\r\n\r\nexport const allBooks: Book[] = [\r\n    { bookID: 1, title: 'Goodnight Moon', author: 'Margaret Wise Brown', publicationYear: 1953 },\r\n    { bookID: 2, title: 'Winnie-the-Pooh', author: 'A. A. Milne', publicationYear: 1926 },\r\n    { bookID: 3, title: 'Where the Wild Things Are', author: 'Maurice Sendak', publicationYear: 1963 },\r\n    { bookID: 4, title: 'The Hobbit', author: 'J. R. R. Tolkien', publicationYear: 1937 },\r\n    { bookID: 5, title: 'Curious George', author: 'H. A. Rey', publicationYear: 1941 },\r\n    { bookID: 6, title: 'Alice\\'s Adventures in Wonderland', author: 'Lewis Carroll', publicationYear: 1865 },\r\n];","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Book } from 'app/models/book';\r\nimport { DataService } from 'app/core/data.service';\r\nimport { Oldbook } from 'app/models/Oldbook';\r\n\r\n@Component({\r\n  selector: 'app-edit-book',\r\n  templateUrl: './edit-book.component.html',\r\n  styles: []\r\n})\r\nexport class EditBookComponent implements OnInit {\r\n\r\n  selectedBook: Book;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService) { }\r\n\r\n  ngOnInit() {\r\n    let bookID: number = parseInt(this.route.snapshot.params['id']);\r\n     this.dataService.getBookById(bookID).subscribe(\r\n      \r\n        (data : Book) => this.selectedBook=data , \r\n        (err : any) => console.log(err),\r\n        () => console.log(\"operation is completed\") \r\n\r\n      \r\n     )\r\n     this.dataService.GetOldBookById(bookID).subscribe(\r\n      (data : Oldbook) => console.log(`old book title : ${data.bookTitle}`)\r\n     )\r\n     \r\n  }\r\n\r\n  setMostPopular(): void {\r\n    this.dataService.setMostPopularBook(this.selectedBook);\r\n  }\r\n\r\n  saveChanges(): void {\r\n    this.dataService.UpdateBook(this.selectedBook)\r\n    .subscribe(\r\n      (data : void) =>console.log(`${this.selectedBook.title} updated successfully `) , \r\n      (err : any ) => console.log(err)\r\n    ) ;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\nimport { Reader } from \"app/models/reader\";\r\nimport { DataService } from 'app/core/data.service';\r\nimport { BadgeService } from 'app/core/badge.service';\r\n\r\n@Component({\r\n  selector: 'app-edit-reader',\r\n  templateUrl: './edit-reader.component.html',\r\n  styles: [],\r\n  providers: [BadgeService]\r\n})\r\nexport class EditReaderComponent implements OnInit {\r\n\r\n  selectedReader: Reader;\r\n  currentBadge: string;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private dataService: DataService,\r\n              private badgeService: BadgeService) { }\r\n\r\n  ngOnInit() {\r\n    let readerID: number = parseInt(this.route.snapshot.params['id']);\r\n    this.selectedReader = this.dataService.getReaderById(readerID);\r\n    this.currentBadge = this.badgeService.getReaderBadge(this.selectedReader.totalMinutesRead);\r\n  }\r\n\r\n  saveChanges() {\r\n    console.warn('Save reader not yet implemented.');\r\n  }\r\n}\r\n","export class BookTrackerError {\r\n  errorNumber: number;\r\n  message: string;\r\n  friendlyMessage: string;\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addBookForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveBook(addBookForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add New Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" name=\\\"title\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" name=\\\"author\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" name=\\\"publicationYear\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form #addReaderForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveReader(addReaderForm.value)\\\" class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Add Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" name=\\\"name\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" name=\\\"weeklyReadingGoal\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" name=\\\"totalMinutesRead\\\" ngModel>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n        <!-- Brand and toggle get grouped for better mobile display -->\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n            <a class=\\\"navbar-brand\\\" [routerLink]=\\\"['/dashboard']\\\">Book Tracker</a>\\r\\n        </div>\\r\\n\\r\\n        <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\r\\n            <ul class=\\\"nav navbar-nav\\\">\\r\\n                <li><a [routerLink]=\\\"['/addbook']\\\">Add Book<span class=\\\"sr-only\\\">(current)</span></a></li>\\r\\n                <li><a [routerLink]=\\\"['/addreader']\\\">Add Reader</a></li>\\r\\n            </ul>\\r\\n        </div><!-- /.navbar-collapse -->\\r\\n    </div><!-- /.container-fluid -->\\r\\n</nav>\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\";","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Books</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let book of allBooks'>\\r\\n          <i>{{book.title}}</i>\\r\\n          <a [routerLink]=\\\"['/editbook', book.bookID]\\\"> Edit </a>\\r\\n          <a (click)=\\\"deleteBook(book.bookID)\\\">Delete</a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">All Readers</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n        <li *ngFor='let reader of allReaders'>\\r\\n          {{reader.name}}\\r\\n          <a [routerLink]=\\\"['/editreader', reader.readerID]\\\">Edit</a>\\r\\n          <a (click)=\\\"deleteReader(reader.readerID)\\\"> Delete </a>\\r\\n        </li>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-4\\\">\\r\\n      <div class=\\\"panel panel-primary\\\">\\r\\n        <div class=\\\"panel-heading\\\">\\r\\n          <h3 class=\\\"panel-title\\\">Most Popular Book</h3>\\r\\n        </div>\\r\\n        <div class=\\\"panel-body\\\">\\r\\n          <i>{{mostPopularBook.title}}</i> by {{mostPopularBook.author}}\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Book</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTitle\\\" class=\\\"col-lg-3 control-label\\\">Title</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTitle\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"selectedBook && selectedBook.title\\\" name=\\\"title\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputAuthor\\\" class=\\\"col-lg-3 control-label\\\">Author</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputAuthor\\\" placeholder=\\\"Author\\\" [(ngModel)]=\\\"selectedBook && selectedBook.author\\\" name=\\\"author\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputYear\\\" class=\\\"col-lg-3 control-label\\\">Year</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputYear\\\" placeholder=\\\"Year Published\\\" [(ngModel)]=\\\"selectedBook && selectedBook.publicationYear\\\" name=\\\"publicationYear\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-8 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"setMostPopular()\\\">Set As Most Popular</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";","export default \"<div class=\\\"col-lg-5\\\">\\r\\n  <div class=\\\"well bs-component\\\">\\r\\n    <form class=\\\"form-horizontal\\\">\\r\\n      <fieldset>\\r\\n        <legend>Edit Reader</legend>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Name</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"selectedReader && selectedReader.name\\\" name=\\\"name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputGoal\\\" class=\\\"col-lg-3 control-label\\\">Weekly Goal</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputGoal\\\" placeholder=\\\"Weekly Goal\\\" [(ngModel)]=\\\"selectedReader && selectedReader.weeklyReadingGoal\\\" name=\\\"weeklyReaddingGoal\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Total Read</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"inputTotal\\\" placeholder=\\\"Total Minutes Read\\\" [(ngModel)]=\\\"selectedReader && selectedReader.totalMinutesRead\\\" name=\\\"totalMinutesRead\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"inputTotal\\\" class=\\\"col-lg-3 control-label\\\">Current Badge</label>\\r\\n          <div class=\\\"col-lg-8\\\">\\r\\n            {{ currentBadge }}\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"col-lg-10 col-lg-offset-3\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"saveChanges()\\\">Save</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </fieldset>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\";"],"sourceRoot":"webpack:///"}